{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This Template is use to create Users, Groups and Policies",
    "Parameters": {
        "Password": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "New account password",
            "MinLength": "1",
            "MaxLength": "41",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters."
        },
        "UserName": {
            "Type": "String",
            "Description" : "Name of the User"
        },
        "UsersGroup": {
            "Type": "String",
            "Description" : "Group Name for the User"
        }
    },
    "Resources": {
        "CFNUser": {
            "Type": "AWS::IAM::User",
            "Properties": {
		"Groups": [{ "Ref" : "UserGroup" }],
                "UserName": { "Ref" : "UserName" },
                "LoginProfile": {
                    "Password": {"Ref": "Password"}
		    
                }
            }
        },
     "UserGroup": {
          "Type": "AWS::IAM::Group",
                "Properties": {
		"GroupName": { "Ref" : "UsersGroup" }
   }
},
        "Users": {
            "Type": "AWS::IAM::UserToGroupAddition",
            "Properties": {
                "GroupName": {
                    "Ref": "UserGroup"
                },
                "Users": [
                    {
                        "Ref": "CFNUser"
                    }
                ]
            }
        },
        "EC2ReadOnlyAccess": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "EC2ReadOnlyAccess",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "ec2:Describe*",
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": "elasticloadbalancing:Describe*",
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cloudwatch:ListMetrics",
                                "cloudwatch:GetMetricStatistics",
                                "cloudwatch:Describe*"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": "autoscaling:Describe*",
                            "Resource": "*"
                        }
                    ]
                },
                "Groups": [
                    {
                        "Ref": "UserGroup"
                    }
                ]
            }
        },
        "HPOMiBilling": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "HPOMiBilling",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": [
                                "aws-portal:ViewPaymentMethods",
                                "aws-portal:ViewAccount",
                                "aws-portal:ViewBilling",
                                "aws-portal:ViewUsage"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Groups": [
                    {
                        "Ref": "UserGroup"
                    }
                ]
            }
        },
        "S3ReadOnlyAccess": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "S3ReadOnlyAccess",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:Get*",
                                "s3:List*"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Groups": [
                    {
                        "Ref": "UserGroup"
                    }
                ]
            }
        },
        "IAMReadOnlyAccess": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "IAMReadOnlyAccess",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "iam:GenerateCredentialReport",
                                "iam:GenerateServiceLastAccessedDetails",
                                "iam:Get*",
                                "iam:List*",
                                "iam:SimulateCustomPolicy",
                                "iam:SimulatePrincipalPolicy"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Groups": [
                    {
                        "Ref": "UserGroup"
                    }
                ]
            }
        },
        "RDSReadOnlyAccess": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "RDSReadOnlyAccess",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "rds:Describe*",
                                "rds:ListTagsForResource",
                                "ec2:DescribeAccountAttributes",
                                "ec2:DescribeAvailabilityZones",
                                "ec2:DescribeInternetGateways",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeVpcAttribute",
                                "ec2:DescribeVpcs"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "cloudwatch:GetMetricStatistics",
                                "logs:DescribeLogStreams",
                                "logs:GetLogEvents"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ]
                },
                "Groups": [
                    {
                        "Ref": "UserGroup"
                    }
                ]
            }
        },
        "CloudWatchReadOnlyAccess": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "CloudWatchReadOnlyAccess",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "autoscaling:Describe*",
                                "cloudwatch:Describe*",
                                "cloudwatch:Get*",
                                "cloudwatch:List*",
                                "logs:Get*",
                                "logs:List*",
                                "logs:Describe*",
                                "logs:TestMetricFilter",
                                "sns:Get*",
                                "sns:List*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ]
                },
                "Groups": [
                    {
                        "Ref": "UserGroup"
                    }
                ]
            }
        },
        "HPOMiMonitoringECS": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "HPOMiMonitoringECS",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": [
                                "ecs:ListTasks",
                                "ecs:ListContainerInstances",
                                "ecs:DescribeContainerInstances",
                                "ecs:DeregisterContainerInstance",
                                "ecs:DescribeTasks",
                                "ecs:DescribeClusters"
                            ],
                            "Resource": [
                                "arn:aws:ecs:*:*:task/*",
                                "arn:aws:ecs:*:*:container-instance/*",
                                "arn:aws:ecs:*:*:cluster/*"
                            ]
                        },
                        {
                            "Sid": "VisualEditor1",
                            "Effect": "Allow",
                            "Action": [
                                "ecs:DeregisterTaskDefinition",
                                "ecs:ListServices",
                                "ecs:DiscoverPollEndpoint",
                                "ecs:ListTaskDefinitionFamilies",
                                "ecs:DescribeServices",
                                "ecs:DescribeTaskDefinition",
                                "ecs:ListTaskDefinitions",
                                "ecs:ListClusters"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Groups": [
                    {
                        "Ref": "UserGroup"
                    }
                ]
            }
        },
        "Keys": {
            "Type": "AWS::IAM::AccessKey",
            "Properties": {
                "UserName": {
                    "Ref": "CFNUser"
                }
            }
        }
    },
    "Outputs": {
        "AccessKey": {
            "Value": {
                "Ref": "Keys"
            },
            "Description": "AWSAccessKeyId of new user"
        },
        "SecretKey": {
            "Value": {
                "Fn::GetAtt": [
                    "Keys",
                    "SecretAccessKey"
                ]
            },
            "Description": "AWSSecretKey of new user"
        }
    }
}